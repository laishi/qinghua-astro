


<!-- dat -->
---
import HeaderParallax from "./Header/HeaderParallax.astro";
import Waves from "./Header/Waves.astro";
import Menu from "./Header/Menu.astro";

import CardParallax from "./CardParallax.astro";
import CardGlass from "./CardGlass.astro";

import Footer from "./Footer.astro";


const templates = [
  { id: "01", name: "01-add-life-health-fitness-free-bootstrap-html5-template", title: "Life Health Template", keywords: ["健康养生", "健身塑形", "医疗保健", "🔥 3688"] },
  { id: "02", name: "02-reveal", title: "通用模板", keywords: ["企业展示", "品牌宣传", "多场景", "🔥 2875"] },
  { id: "03", name: "03-agile-agency-free-bootstrap-web-template", title: "Agency Free Template", keywords: ["广告代理", "创意设计", "服务行业", "🔥 4521"] },
  { id: "04", name: "04-amaze-photography-bootstrap-html5-template", title: "Photography Bootstrap Template", keywords: ["摄影作品", "视觉艺术", "影像展示", "🔥 5123"] },
  { id: "05", name: "05-aroma-beauty-and-spa-responsive-bootstrap-template", title: "Beauty And Template", keywords: ["美容护肤", "水疗养生", "健康管理", "🔥 4987"] },
  { id: "06", name: "06-avenger-multi-purpose-responsive-html5-bootstrap-template", title: "Multi Purpose Template", keywords: ["企业官网", "产品展示", "品牌营销", "🔥 6754"] },
  { id: "07", name: "07-b-school-free-education-html5-website-template", title: "School Free Template", keywords: ["教育培训", "在线课程", "学术机构", "🔥 3892"] },
  { id: "08", name: "08-beauty-salon-bootstrap-html5-template", title: "Salon Bootstrap Template", keywords: ["美发造型", "美容美甲", "形象设计", "🔥 4231"] },
  { id: "09", name: "09-brand-html5-app-landing-page-responsive-web-template", title: "Html5 App Template", keywords: ["移动应用", "产品推广", "下载页面", "🔥 5876"] },
  { id: "10", name: "10-businessline-corporate-portfolio-bootstrap-responsive-web-template", title: "Corporate Portfolio Template", keywords: ["企业形象", "案例展示", "品牌建设", "🔥 5321"] },
  { id: "11", name: "11-businessr-corporate-bootstrap-responsive-web-template", title: "Corporate Bootstrap Template", keywords: ["商务办公", "企业宣传", "品牌官网", "🔥 4876"] },
  { id: "12", name: "12-car-repair-html5-bootstrap-template", title: "Repair Html5 Template", keywords: ["汽车维修", "4S店铺", "保养服务", "🔥 3567"] },
  { id: "13", name: "13-car-zone-automobile-bootstrap-responsive-web-template", title: "Zone Automobile Template", keywords: ["汽车销售", "新车展示", "二手车", "🔥 4123"] },
  { id: "14", name: "14-city-square-bootstrap-responsive-web-template", title: "Square Bootstrap Template", keywords: ["城市生活", "商业广场", "综合体", "🔥 2987"] },
  { id: "15", name: "15-cloud-hosting-free-bootstrap-responsive-website-template", title: "Hosting Free Template", keywords: ["云服务", "服务器", "虚拟主机", "🔥 5432"] },
  { id: "16", name: "16-clouds-html5-multipurpose-landing-page-template", title: "Html5 Multipurpose Template", keywords: ["产品发布", "活动宣传", "营销推广", "🔥 4985"] },
  { id: "17", name: "17-coffee-shop-free-html5-template", title: "Shop Free Template", keywords: ["咖啡餐饮", "休闲空间", "甜品烘焙", "🔥 3765"] },
  { id: "18", name: "18-creative-free-responsive-html5-business-template", title: "Free Responsive Template", keywords: ["创意设计", "广告传媒", "品牌策划", "🔥 4321"] },
  { id: "19", name: "19-darktouch-corporate-portfolio-bootstrap-responsive-web-template", title: "Corporate Portfolio Template", keywords: ["高端企业", "品牌视觉", "案例合集", "🔥 5123"] },
  { id: "20", name: "20-delite-music-html5-bootstrap-responsive-web-template", title: "Music Html5 Template", keywords: ["音乐艺术", "演出活动", "艺人宣传", "🔥 3987"] },
  { id: "21", name: "21-eat-restaurant-bootstrap-html5-template", title: "Restaurant Bootstrap Template", keywords: ["餐饮美食", "餐厅订座", "外卖服务", "🔥 4567"] },
  { id: "22", name: "22-elegant-free-multi-purpose-bootstrap-responsive-template", title: "Free Multi Template", keywords: ["婚庆策划", "活动庆典", "宴会服务", "🔥 3876"] },
  { id: "23", name: "23-enlive-corporate-free-html5-bootstrap-web-template", title: "Corporate Free Template", keywords: ["集团官网", "上市公司", "企业门户", "🔥 5234"] },
  { id: "24", name: "24-fit-healthy-fitness-and-gym-html5-bootstrap-theme", title: "Healthy Fitness Template", keywords: ["健身中心", "私教课程", "运动健康", "🔥 4789"] },
  { id: "25", name: "25-fitness-zone-html5-bootstrap-responsive-web-template", title: "Zone Html5 Template", keywords: ["瑜伽舞蹈", "体能训练", "减肥塑形", "🔥 4321"] },
  { id: "26", name: "26-frames-corporate-bootstrap-free-html5-template", title: "Corporate Bootstrap Template", keywords: ["金融投资", "咨询服务", "律师事务所", "🔥 3987"] },
  { id: "27", name: "27-free-bootstrap-template-real-estate-my-home", title: "房地产模板", keywords: ["楼盘展示", "房产中介", "家装设计", "🔥 5678"] },
  { id: "28", name: "28-free-bootstrap-template-restaurant-website-treehut", title: "餐厅网站模板", keywords: ["主题餐厅", "美食推荐", "在线订餐", "🔥 4876"] },
  { id: "29", name: "29-free-bootstrap-template-rockline-business", title: "商务模板", keywords: ["工业制造", "建筑工程", "贸易公司", "🔥 4123"] },
  { id: "30", name: "30-free-portfolio-html5-responsive-website-sam", title: "作品集模板", keywords: ["个人简历", "设计作品", "艺术创作", "🔥 5234"] },
];


const tempPath = "./assets/qinghua-template/spa/";
const tempLink = "./assets/pages/temp.html";

// 根据页面决定显示全部还是前23个
const gridData = templates.slice(0, 13)
  .map((template, index) => ({
    id: index,
    linkurl: `${tempPath}${template.name}/index.html`,
    imgurl: `${tempPath}${template.name}/screenshot.png`,
    title: template.title,
    keywords: template.keywords,
  }));

---

<!-- HTML 部分 -->
<div class="mainPage">

    <HeaderParallax height="80vh" title="青花卓越">
        <Waves slot="waves" />
        <Menu slot="menu" />
    </HeaderParallax>

  <CardParallax />
  <CardGlass />
  

  <section id="temp">
    <div class="pageSlider">
      <div class="homePage">
        <div class="gridHeader">
          <div class="card"></div>
        </div>
        <div class="detailGrids" id="detailGrids">
          {
            gridData.map((item, index) => (
              <div class="detailGrid" data-index={item.id}>
                <a href={item.linkurl} onClick={(e) => e.stopPropagation()}>
                  <img src={item.imgurl} loading="lazy" alt={item.title} />
                  <div class="imgMask" />
                </a>

                <div class="imgMask"></div>

                <ul class="gridInfo" aria-label="模板关键词">
                  {item.keywords.map((keyword) => (
                    <li class="infoKeyword">{keyword}</li>
                  ))}
                </ul>
              </div>
            ))
          }
          <div class="detailGrid enddetailGrid">
            <a href="/templates" aria-label="参考更多建站模版">
              ➤
            </a>
          </div>
        </div>
      </div>
    </div>

    <div class="detailPage">
      <div class="cicleloader-container">
        <iframe src=""></iframe>
        <div class="ripple-loader"></div>
        <div class="bubble-loader"><h3 class="btnText">&lt;</h3></div>
      </div>
    </div>
  </section>
  
  <Footer />

</div>


<!-- style -->
<style>
  :root {
    --bubble-size: 5em;
    --bubble-color-start: #4dabf7;
    --bubble-color-end: #072450;
    --breathe-duration: 2s;
    --ripple-duration: 1.5s;
    --detailPage-move: 0.5s;
    --text-fade-duration: 0.5s;
    --move-duration: 0.5s;
    --easing: cubic-bezier(0.4, 0, 0.6, 1);
    --ripple-easing: cubic-bezier(0.25, 0.1, 0.25, 1);
  }

  .mainPage {
    position: relative;
    width: 100%;
    transition: transform 0.5s ease;
    will-change: transform;
  }

  .pageSlider {
    position: relative;
    width: 100%;
    transition: transform 0.5s ease;
    will-change: transform;
  }

  .pageSlider .gridHeader {
    position: relative;
    width: 100%;
    height: 30vh;
    background-color: rgb(1, 40, 56);
    display: flex;
    align-items: center;
    justify-content: center;
  }


/* From Uiverse.io by csozidev */ 
/* glowing hover card made by: csozi | Website: english.csozi.hu*/

.card {
  position: relative;
  width: 190px;
  height: 254px;
  background: rgb(255, 0, 179);
  background: linear-gradient(137deg, rgb(255, 0, 179) 0%, rgba(0,212,255,1) 100%);
  transition: 0.3s ease;
  border-radius: 30px;
  filter: drop-shadow(0px 0px 30px rgba(209, 38, 197, 0.5));
}

.card::after {
  content: '';
  background-color: #181818;
  position: absolute;
  z-index: 1;
  transition: 0.3s ease;
  height: 98%;
  width: 98%;
  top: 1%;
  left: 1%;
  border-radius: 28px;
}

.card:hover {
  filter: drop-shadow(0px 0px 30px rgba(209, 38, 197, 1));
}


  .pageSlider .detailGrids {
    position: relative;
    width: 80%;
    /* background-color: rgb(112, 165, 42); */
    margin: 0 auto;
    padding: 5em 0;
    display: flex;
    flex-direction: column;
    gap: 1em;
  }

  .pageSlider .gridRow {
    position: relative;
    width: 100%;
    display: flex;
    flex-direction: row;
    gap: 1em;
    /* background-color: rgb(53, 14, 104); */
    border-radius: 1em;
    /* display: none; */
  }


  .detailGrid {
    position: relative;
    flex: 1 1 20%;
    height: 30vh;
    justify-content: center;
    align-items: center;
    /* background-color: #4e0e0e; */
    border-radius: 1em;
    overflow: hidden;
    cursor: pointer;
    transition:
      flex 0.3s ease,
      transform 0.3s ease;
    min-width: 0;
    box-sizing: border-box;
        box-shadow: 0px 1px 2px rgba(0, 0, 0, 0.2), 0px -1px 2px rgba(0, 0, 0, 0.2),
        1px 0px 2px rgba(0, 0, 0, 0.2), -1px 0px 2px rgba(0, 0, 0, 0.2);
  }


  .detailGrid:hover {
    box-shadow: 0px 5px 10px rgba(0, 0, 0, 0.2), 0px -5px 10px rgba(250, 229, 229, 0.2),
            5px 0px 10px rgba(0, 0, 0, 0.2), -5px 0px 10px rgba(0, 0, 0, 0.2);   
  }


.enddetailGrid {
    cursor: pointer;
    transition: all 0.3s ease-in-out;
}

.enddetailGrid>a {
    width: 100%;
    height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    text-decoration: none;
    font-size: 2em;
    transition: all 0.3s ease;
}
.enddetailGrid:hover a{
    font-size: 3em;
    color: var(--bubble-color-end);
}

  .detailGrid:hover {
    flex: 1 1 40%;
  }

  .detailGrid img {
    position: relative;
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: top;
    pointer-events: none;
    transition: transform 0.3s ease;
  }

.detailGrid .imgMask {
    position: absolute;
    width: 100%;
    height: 100%;
    top: 0;
    left: 0;
    /* background-color: red; */
    background-image: radial-gradient(circle, rgba(0,0,0,0.2) 60%, rgba(0,0,0,0.2) 100%);
    transition: background-image 0.1s linear;
    pointer-events: none;
    z-index: 100;
}

.detailGrid:hover .imgMask {
    background-image: radial-gradient(circle, rgba(0,0,0,0.0) 60%, rgba(0, 0, 0, 0.2) 100%);
}


  .detailGrid ul {
    position: absolute;
    bottom: 0;
    width: 100%;
    height: 3em;
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
    text-align: center;
    background-color: rgba(0, 0, 0, 0.8);
    color: rgba(255, 255, 255, 0.8);
    list-style: none;
    padding: 0;
    margin: 0;
  }

  .detailGrid ul li {
    flex: 1;
  }

  .detailPage {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100vh;
    z-index: -1;
    cursor: pointer;
    overflow: hidden;
    opacity: 1;
  }

  .cicleloader-container iframe {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border: none;
    opacity: 1;
    filter: blur(5px);
    will-change: opacity, filter, clip-path;
    -webkit-clip-path: circle(0 at 50% 50%);
    clip-path: circle(0 at 50% 50%);
    animation:
      clipPathExpand var(--ripple-duration) var(--ripple-easing) forwards,
      fadeIn var(--ripple-duration) var(--ripple-easing) forwards;
    animation-delay: calc(var(--detailPage-move) + 0.1s);
  }

  .cicleloader-container iframe.loaded {
    opacity: 1;
    filter: blur(0);
  }

  .cicleloader-container .ripple-loader {
    position: absolute;
    top: 50%;
    left: 50%;
    width: var(--bubble-size);
    height: var(--bubble-size);
    background: radial-gradient(
      circle,
      transparent 30%,
      var(--bubble-color-start) 60%,
      var(--bubble-color-end) 100%
    );
    border-radius: 50%;
    transform: translate(-50%, -50%) scale(0);
    opacity: 0.7;
    pointer-events: none;
    animation: ripple-loader var(--ripple-duration) var(--ripple-easing)
      forwards;
    animation-delay: calc(var(--detailPage-move) + 0.1s);
    transform-origin: 50% 50%;
  }

  .cicleloader-container .bubble-loader {
    position: absolute;
    display: flex;
    justify-content: center;
    align-items: center;
    top: 50%;
    left: 50%;
    width: var(--bubble-size);
    height: var(--bubble-size);
    animation: breathe-loader var(--breathe-duration) var(--easing) infinite;
    pointer-events: auto;
    cursor: pointer;
    border-radius: 50%;
    background: linear-gradient(
      135deg,
      rgba(255, 255, 255, 0.2),
      rgba(255, 255, 255, 0.05)
    );
    -webkit-backdrop-filter: blur(15px) saturate(200%);
    backdrop-filter: blur(15px) saturate(200%);
    border: 1px solid rgba(255, 255, 255, 0.2);
    box-shadow:
      inset 0 2px 8px rgba(255, 255, 255, 0.15),
      0 4px 12px rgba(0, 0, 0, 0.15),
      0 0 20px rgba(255, 255, 255, 0.1);
    color: #fff;
    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);
    text-align: center;
  }

  .cicleloader-container .bubble-loader.loaded {
    position: absolute;
    top: 50%;
    left: 50%;
    width: var(--bubble-size);
    height: var(--bubble-size);
    animation:
      move-to-corner var(--move-duration) var(--easing) forwards,
      liquidGlassBreathe 2.5s cubic-bezier(0.4, 0, 0.2, 1) infinite;
  }

  .cicleloader-container .bubble-loader .btnText {
    color: rgba(0, 0, 0, 0.8);
    font-size: 1.1em;
    font-weight: 500;
  }

  .cicleloader-container .bubble-loader:hover {
    background: linear-gradient(
      135deg,
      rgba(255, 255, 255, 0.3),
      rgba(255, 255, 255, 0.1)
    );
    -webkit-backdrop-filter: blur(15px) saturate(200%);
    backdrop-filter: blur(15px) saturate(200%);
    box-shadow:
      inset 0 2px 8px rgba(255, 255, 255, 0.2),
      0 6px 16px rgba(0, 0, 0, 0.2),
      0 0 24px rgba(255, 255, 255, 0.15);
  }

  .cicleloader-container .loading-text {
    position: relative;
    color: white;
    font-size: 16px;
    pointer-events: none;
    opacity: 1;
    transform: scale(1);
    animation: breathe-text var(--breathe-duration) var(--easing) infinite;
  }

  .cicleloader-container .loaded .loading-text {
    opacity: 0;
    animation: none;
  }

  .cicleloader-container .error-text {
    color: white;
    text-align: center;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    font-size: 1.5em;
    opacity: 0;
    animation: fadeIn 0.5s ease forwards;
  }

  @keyframes clipPathExpand {
    0% {
      -webkit-clip-path: circle(0 at 50% 50%);
      clip-path: circle(0 at 50% 50%);
    }
    100% {
      -webkit-clip-path: circle(100vmax at 50% 50%);
      clip-path: circle(100vmax at 50% 50%);
    }
  }

  @keyframes ripple-loader {
    0% {
      transform: translate(-50%, -50%) scale(0);
      opacity: 0.7;
    }
    100% {
      transform: translate(-50%, -50%) scale(5);
      width: 100vmax;
      height: 100vmax;
      opacity: 0;
    }
  }

  @keyframes breathe-loader {
    0%,
    100% {
      transform: translate(-50%, -50%) scale(1);
      opacity: 0.8;
    }
    50% {
      transform: translate(-50%, -50%) scale(1.3);
      opacity: 1;
    }
  }

  @keyframes breathe-text {
    0%,
    100% {
      transform: scale(1.1);
      opacity: 1;
    }
    50% {
      transform: scale(0.7);
      opacity: 0.7;
    }
  }

  @keyframes fadeIn {
    to {
      opacity: 1;
    }
  }

  @keyframes move-to-corner {
    0% {
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%) scale(1);
    }
    100% {
      top: 20%;
      left: 20%;
      transform: translate(-50%, -50%) scale(1);
    }
  }

  @keyframes liquidGlassBreathe {
    0% {
      transform: translate(-50%, -50%) scale(1);
      box-shadow:
        inset 0 2px 8px rgba(255, 255, 255, 0.15),
        0 4px 12px rgba(0, 0, 0, 0.15),
        0 0 20px rgba(255, 255, 255, 0.1);
      background: linear-gradient(
        135deg,
        rgba(255, 255, 255, 0.2),
        rgba(255, 255, 255, 0.05)
      );
    }
    50% {
      transform: translate(-50%, -50%) scale(1.03);
      box-shadow:
        inset 0 3px 10px rgba(255, 255, 255, 0.25),
        0 6px 16px rgba(0, 0, 0, 0.2),
        0 0 28px rgba(255, 255, 255, 0.15);
      background: linear-gradient(
        135deg,
        rgba(255, 255, 255, 0.25),
        rgba(255, 255, 255, 0.08)
      );
    }
    100% {
      transform: translate(-50%, -50%) scale(1);
      box-shadow:
        inset 0 2px 8px rgba(255, 255, 255, 0.15),
        0 4px 12px rgba(0, 0, 0, 0.15),
        0 0 20px rgba(255, 255, 255, 0.1);
      background: linear-gradient(
        135deg,
        rgba(255, 255, 255, 0.2),
        rgba(255, 255, 255, 0.05)
      );
    }
  }
</style>

<script type="module" client:load>
  class SliderDetailGrid {
    constructor() {
      this.rootUrl = window.location.origin + window.location.pathname;
      this.tempPath = "./assets/qinghua-template/spa/";
      this.tempLink = "./assets/pages/temp.html";
      this.pageSlider = document.querySelector(".pageSlider");
      this.mainPage = document.querySelector(".mainPage");
      this.detailGrids = document.querySelector(".detailGrids");
      this.detailGrid = this.detailGrids.querySelectorAll(".detailGrid")

      this.detailPage = document.querySelector(".detailPage");
      this.cicleloaderContainer = this.detailPage.querySelector(".cicleloader-container");
      this.iframe = document.querySelector(".detailPage iframe");
      this.bubbleLoader = this.detailPage.querySelector(".bubble-loader");
      this.rippleLoader = this.detailPage.querySelector(".ripple-loader");

      this.state = { viewer: "mainView", detailGrid: {} };

      const astroAttr = Array.from(this.detailGrids.attributes).find((attr) =>
        attr.name.startsWith("data-astro-cid"),
      );
      this.astroCidAttr = astroAttr?.name || null;

      if (!this.mainPage || !this.detailGrids || !this.detailPage) {
        console.error("Required DOM elements are missing.");
        return;
      }

      this.init();
    }

    init() {
      this.reRow();
      this.reconfig();
      this.bindEvents();
      if (location.hash.startsWith("#detailView")) {
        this.onHashChange();
      }
    }

    reRow() {
      var gw = 300;
      const gridsWidth = this.detailGrids.clientWidth;
      const gridGap = parseFloat(getComputedStyle(this.detailGrids).gap) || 16;
      const perRow = Math.min(Math.max(Math.floor(gridsWidth / gw), 2), 5);
      const grids = Array.from(this.detailGrid,);
      this.detailGrids.innerHTML = "";

      for (let i = 0; i < grids.length; i += perRow) {
        const gridRow = document.createElement("div");
        gridRow.className = `gridRow gridRow-${i / perRow}`;
        if (this.astroCidAttr) {
          gridRow.setAttribute(this.astroCidAttr, "");
        }
        const rowItems = grids.slice(i, i + perRow);
        const widthPerGrid = (gridsWidth - (perRow - 1) * gridGap) / perRow;
        rowItems.forEach((grid) => {
          gridRow.appendChild(grid);
        });
        this.detailGrids.appendChild(gridRow);
      }

    }

    reconfig() {
      if (this.rootUrl.includes("temp.html")) {
        const endGrid = this.detailGrids.querySelector(".enddetailGrid");
        if (endGrid) {
          endGrid.innerHTML =
            '<a href="/" aria-label="Back to home"> < 回到首页 </a>';
        }
      }
      if (this.rootUrl.includes("pages")) {
        const headerTitle = document.querySelector(".header-content");
        if (headerTitle) {
          headerTitle.style.height = "30vh";
        }
      }
    }


    


    bindEvents() {
      window.addEventListener("resize", () => this.reRow());
      window.addEventListener("popstate", (e) => this.handlePopState(e));
      window.addEventListener("hashchange", () => this.onHashChange());

      this.bubbleLoader.addEventListener("click", (e) => {
        this.navigateTo("mainView");
      });

     
      this.detailGrids
        .querySelectorAll(".detailGrid:not(.enddetailGrid)")
        .forEach((grid) => {
          grid.addEventListener("click", (e) => {
            const index = parseInt(grid.dataset.index, 10);
            const linkurl = grid.querySelector("a").href;
            const imgurl = grid.querySelector("img").src;
            const enterFrom =
              e.clientX < window.innerWidth / 2 ? "left" : "right";
            sessionStorage.setItem("lastEnterFrom", enterFrom);

            this.setState({
              viewer: "detailView",
              detailGrid: { index, linkurl, imgurl, enterFrom },
            });

            this.navigateTo("detailView");
          });
        });
    }

    setState(update) {
      this.state = { ...this.state, ...update };
    }

    navigateTo(view) {
      if (view === "detailView") {
        const { index, enterFrom, linkurl, imgurl } = this.state.detailGrid;
        history.pushState(
          { view, index, enterFrom, linkurl, imgurl },
          "",
          `#detailView/template/${index + 1}`,
        );
        this.goToDetail();
      } else {
        history.pushState({ view: "mainView" }, "", this.rootUrl);
        this.goToMain();
      }
    }

    goToDetail() {
      this.detailPage.style.opacity = 1;
      const { index, perRow, imgurl, linkurl, enterFrom } =
        this.state.detailGrid;

      // 重置所有元素状态
      this.cicleloaderContainer.innerHTML = "";
      this.iframe.classList.remove("loaded");
      this.rippleLoader.classList.remove("active");
      this.bubbleLoader.classList.remove("loaded");

      // 重新添加元素
      this.cicleloaderContainer.appendChild(this.iframe);
      this.cicleloaderContainer.appendChild(this.rippleLoader);
      this.cicleloaderContainer.appendChild(this.bubbleLoader);

      this.iframe.src = linkurl;

      // 创建新的动画结束处理函数（避免重复绑定）
      const handleAnimationEnd = () => {
        this.bubbleLoader.classList.add("loaded");
        this.rippleLoader.removeEventListener(
          "animationend",
          handleAnimationEnd,
        );
      };

      this.iframe.addEventListener("load", () => {
        this.iframe.classList.add("loaded");
        this.rippleLoader.classList.add("active");
        this.rippleLoader.addEventListener("animationend", handleAnimationEnd, {
          once: true,
        });
      });

      document.body.style.overflow = "hidden";
      this.detailPage.style.transform = `translateY(${window.scrollY}px)`;

      if (enterFrom === "left") {
        this.detailPage.style.left = "-100%";
        this.mainPage.style.transform = "translateX(100%)";
      } else {
        this.detailPage.style.left = "100%";
        this.mainPage.style.transform = "translateX(-100%)";
      }
    }

    goToMain() {
      this.setState({ viewer: "mainView" });
      document.body.style.overflow = "";
      this.mainPage.style.transform = "translateX(0)";

      setTimeout(() => {
        this.iframe.src = "";
        this.cicleloaderContainer.innerHTML = "";
      }, 1000);
    }

    handlePopState(event) {
      const state = event.state || { view: "mainView" };
      if (state.view === "mainView") {
        this.goToMain();
      } else if (state.view === "detailView") {
        const enterFrom =
          state.enterFrom || sessionStorage.getItem("lastEnterFrom") || "right";
        this.setState({
          viewer: "detailView",
          detailGrid: { ...state, enterFrom },
        });
        this.goToDetail();
      }
    }

    onHashChange() {
      const hash = location.hash.slice(1);
      const parts = hash.split("/");
      if (parts[0] !== "detailView") {
        this.goToMain();
        return;
      }

      const index = parseInt(parts[2], 10) - 1;
      if (
        isNaN(index) ||
        index < 0 ||
        index >=
          this.detailGrids.querySelectorAll(".detailGrid:not(.enddetailGrid)")
            .length
      ) {
        this.goToMain();
        return;
      }

      const grid = this.detailGrids.querySelector(
        `.detailGrid[data-index="${index}"]`,
      );
      if (!grid) {
        this.goToMain();
        return;
      }

      const linkurl = grid.querySelector("a").href;
      const imgurl = grid.querySelector("img").src;
      const enterFrom = sessionStorage.getItem("lastEnterFrom") || "right";
      this.setState({
        viewer: "detailView",
        detailGrid: { index, linkurl, imgurl, enterFrom },
      });
      this.goToDetail();
    }
  }

  const gallery = new SliderDetailGrid();
</script>
